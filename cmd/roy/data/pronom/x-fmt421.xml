<?xml version="1.0" encoding="utf-8"?>
<PRONOM-Report xmlns="http://pronom.nationalarchives.gov.uk">
  <report_format_detail>
    <FileFormat>
      <FormatID>808</FormatID>
      <FormatName>Text Configuration file</FormatName>
      <FormatVersion>
      </FormatVersion>
      <FormatAliases>
      </FormatAliases>
      <FormatFamilies>
      </FormatFamilies>
      <FormatTypes>Text (Structured)</FormatTypes>
      <FormatDisclosure>
      </FormatDisclosure>
      <FormatDescription>A Text Configuration file (INI) is an umbrella name for an 'initialization' (or configuration) file that provides users and software developers methods of dynamically configuring the state of an application program at startup and at various other points during the application's runtime. An INI file is characterized by sections, followed by key-value (property-value) pairs. There can be many sections in an INI file and many key-value pairs per section. Sections are denoted by a title in square brackets, e.g. '[section title]'. Key-value pairs have a case-insensitive name followed by an equals sign, and the value that the key is assigned e.g. 'key_1=value'. Comments can be used in an INI file to describe the functionality that a particular value impacts, or to provide further context about the file as a whole. INI files are based on the plain-text format and so are considered human readable and can be opened in a plain-text editor. That being said, an INI file may not make sense outside of its operating context, i.e. the application program it supports, and so the technical environment does need to be documented and preserved in order to understand what function a particular INI file was meant to enable at the time it was used. INI is not a single standard and while INI files conform to some basic principles, users attempting to read them with application programming libraries might want to look at what is supported by their particular implementation, e.g. per this Wikipedia article, https://en.wikipedia.org/w/index.php?title=INI_file&amp;oldid=1181798940#Comparison_of_INI_parsers but other implementation specific guidance may ultimately prove to be more useful.</FormatDescription>
      <BinaryFileFormat>Text</BinaryFileFormat>
      <ByteOrders>
      </ByteOrders>
      <ReleaseDate>
      </ReleaseDate>
      <WithdrawnDate>
      </WithdrawnDate>
      <ProvenanceSourceID>1</ProvenanceSourceID>
      <ProvenanceName>Digital Preservation Department / The National Archives</ProvenanceName>
      <ProvenanceSourceDate>02 Feb 2007</ProvenanceSourceDate>
      <ProvenanceDescription>04/2024 (v.118): Description added as part of PRONOM Research Week 2023. Submitted by Ross Spencer.</ProvenanceDescription>
      <LastUpdatedDate>17 Apr 2024</LastUpdatedDate>
      <FormatNote>
      </FormatNote>
      <FormatRisk>
      </FormatRisk>
      <TechnicalEnvironment>
      </TechnicalEnvironment>
      <FileFormatIdentifier>
        <Identifier>x-fmt/421</Identifier>
        <IdentifierType>PUID</IdentifierType>
      </FileFormatIdentifier>
      <ExternalSignature>
        <ExternalSignatureID>814</ExternalSignatureID>
        <Signature>ini</Signature>
        <SignatureType>File extension</SignatureType>
      </ExternalSignature>
    </FileFormat>
    <SearchCriteria>Criteria</SearchCriteria>
  </report_format_detail>
</PRONOM-Report>
